:root {
  --font-primary: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  --bg-primary: #ffffff;
  --bg-secondary: #f8f9fa; /* Slightly off-white for sections */
  --bg-hover: #f1f3f5;
  --bg-modal-backdrop: rgba(0, 0, 0, 0.5); /* Darker backdrop */

  --text-primary: #212529;
  --text-secondary: #6c757d;
  --text-placeholder: #adb5bd;
  --text-on-primary: #ffffff;
  --text-error: #dc3545;
  --text-success: #198754; /* For success messages */

  --border-primary: #dee2e6;
  --border-focus: #86b7fe; /* Bootstrap focus color */
  --border-error: #dc3545;

  --accent-primary: #0d6efd; /* Bootstrap primary blue */
  --accent-primary-hover: #0b5ed7;
  --accent-secondary: #6c757d; /* Bootstrap secondary grey */
  --accent-secondary-hover: #5c636a;

  --radius: 6px;
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 12px;
  --spacing-lg: 16px;
  --spacing-xl: 20px;

  --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);

  --popup-width: 360px;
}

*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  min-width: var(--popup-width);
  font-family: var(--font-primary);
  font-size: 14px; /* Base font size */
  line-height: 1.5;
  background-color: var(--bg-secondary); /* Use secondary for overall background */
  color: var(--text-primary);
  margin: 0; /* Remove default margin */
  padding: 0; /* Remove default padding */
}

#container {
  width: 100%;
  min-width: var(--popup-width);
  padding: var(--spacing-lg);
  background-color: var(--bg-primary);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg); /* Consistent gap between sections */
}

h1, h2, h3 {
  margin: 0;
  font-weight: 600;
  color: var(--text-primary);
}

/* --- Header --- */
.header-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: var(--spacing-md);
  border-bottom: 1px solid var(--border-primary);
  margin-bottom: var(--spacing-md); /* Space below header */
}

.header-container h1 {
  font-size: 18px;
  font-weight: 700;
}

/* --- Buttons --- */
button {
  font-family: inherit;
  font-size: 14px;
  font-weight: 500;
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid transparent;
  border-radius: var(--radius);
  cursor: pointer;
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  display: inline-flex; /* Align text/icons nicely */
  align-items: center;
  justify-content: center;
  gap: var(--spacing-sm);
  white-space: nowrap; /* Prevent wrapping */
}
button:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px rgba(var(--accent-primary), 0.25); /* Focus ring */
}
button:disabled, button.disabled {
  background-color: #ced4da; /* Disabled background */
  border-color: #ced4da;
  color: var(--text-secondary);
  cursor: not-allowed;
  opacity: 0.65;
}

.primary-button {
  background-color: var(--accent-primary);
  color: var(--text-on-primary);
  border-color: var(--accent-primary);
}
.primary-button:hover:not(:disabled) {
  background-color: var(--accent-primary-hover);
  border-color: var(--accent-primary-hover);
}
.primary-button.full-width {
    width: 100%;
}


.secondary-button {
  background-color: var(--bg-primary);
  color: var(--accent-secondary);
  border-color: var(--border-primary);
}
.secondary-button:hover:not(:disabled) {
  background-color: var(--bg-hover);
  border-color: #adb5bd;
  color: var(--text-primary);
}
.secondary-button.compact {
    padding: var(--spacing-xs) var(--spacing-sm);
    font-size: 12px;
}
.secondary-button.return-button {
    width: 100%;
    justify-content: flex-start; /* Align arrow left */
    margin-bottom: var(--spacing-sm);
}


.icon-button {
  background: none;
  border: none;
  padding: var(--spacing-xs);
  color: var(--text-secondary);
  border-radius: 50%; /* Make icons circular */
  line-height: 1; /* Prevent extra space */
}
.icon-button:hover:not(:disabled) {
  background-color: var(--bg-hover);
  color: var(--text-primary);
}
.icon-button svg {
  display: block; /* Prevent inline spacing issues */
}
.icon-button.close-button {
    color: var(--accent-secondary);
}
.icon-button.close-button:hover {
    color: var(--text-primary);
    background-color: var(--bg-hover);
}
.icon-button.help-button {
    font-weight: bold;
    width: 24px;
    height: 24px;
    font-size: 14px;
}


/* --- Inputs --- */
input[type="text"],
input[type="number"],
input[type="color"] {
  font-family: inherit;
  font-size: 14px;
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius);
  background-color: var(--bg-primary);
  color: var(--text-primary);
  width: 100%;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
input[type="text"]::placeholder,
input[type="number"]::placeholder {
  color: var(--text-placeholder);
  opacity: 1;
}
input[type="text"]:focus,
input[type="number"]:focus {
  outline: none;
  border-color: var(--border-focus);
  box-shadow: 0 0 0 3px rgba(var(--accent-primary), 0.25); /* Matching focus ring */
}
input[type="text"]:disabled,
input[type="number"]:disabled {
  background-color: var(--bg-secondary);
  opacity: 0.7;
  cursor: not-allowed;
}
input[type="color"] {
    padding: 2px;
    height: 32px; /* Match text input height roughly */
    min-width: 40px;
    cursor: pointer;
}
input[type="color"]:disabled {
    cursor: not-allowed;
    opacity: 0.65;
}

/* Input Grouping */
.input-action-group {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm); /* Space between input and button */
}
.input-with-help {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
}
.input-with-help input[type="text"] {
    flex-grow: 1; /* Input takes available space */
}
.exclude-container {
    margin-top: -4px; /* Pull exclude slightly closer */
}
.exclude-container input {
    font-size: 12px;
    padding: 6px var(--spacing-md);
}


/* --- Checkboxes & Radios (Custom Styling) --- */
.checkbox-label,
.radio-label {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  cursor: pointer;
  font-size: 14px;
  user-select: none; /* Prevent text selection on click */
  padding: var(--spacing-xs) 0; /* Add some vertical padding */
}
.checkbox-label.standalone, /* For settings panel */
.radio-label.standalone {
    padding: var(--spacing-sm) 0;
}
.checkbox-label input[type="checkbox"],
.radio-label input[type="radio"] {
    opacity: 0;
    position: absolute;
    width: 1px;
    height: 1px;
    margin: 0;
    padding: 0;
    overflow: hidden;
    clip: rect(0 0 0 0);
    white-space: nowrap;
    border: 0;
}
/* Custom Checkbox/Radio Appearance */
.checkbox-label::before,
.radio-label::before {
    content: '';
    display: inline-block;
    flex-shrink: 0; /* Prevent shrinking if label text wraps */
    width: 16px;
    height: 16px;
    border: 1px solid var(--border-primary);
    background: var(--bg-primary);
    transition: background-color .15s ease-in-out, border-color .15s ease-in-out;
}
.checkbox-label::before {
    border-radius: 4px; /* Square for checkbox */
}
.radio-label::before {
    border-radius: 50%; /* Circle for radio */
}

/* Checkbox - Debug Solid Fill */
.checkbox-label.is-checked::before {
  background-color: #FF0000 !important; /* Bright Red! */
  border-color: #FF0000 !important;     /* Bright Red! */
  content: 'X' !important;             /* Add an obvious character */
  color: white !important;             /* Make character visible */
  text-align: center !important;
  font-weight: bold !important;
  line-height: 16px !important;        /* Center the X vertically */
}

/* Dot SVG for Radio */
.radio-label.is-checked::before { /* Style based on label's class */
   background-color: var(--accent-primary); /* Add background color here */
   border-color: var(--accent-primary);    /* Add border color here */
   background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23ffffff'/%3e%3c/svg%3e");
   background-size: 7px 7px;
   background-repeat: no-repeat;   /* Ensure these are here */
   background-position: center; /* Ensure these are here */
}

/* Focus State */
.checkbox-label:focus-within::before,
.radio-label:focus-within::before {
     outline: none; /* Remove default if any */
     box-shadow: 0 0 0 3px rgba(var(--accent-primary), 0.25);
}

/* Disabled State */
.checkbox-label.disabled,
.radio-label.disabled {
    color: var(--text-secondary);
    cursor: not-allowed;
    opacity: 0.7;
}
.checkbox-label.disabled::before,
.radio-label.disabled::before {
    background-color: var(--bg-secondary);
    border-color: var(--border-primary);
}

/* Ensure disabled inputs inside don't trigger hover/focus on label */
.checkbox-label input[type="checkbox"]:disabled,
.radio-label input[type="radio"]:disabled {
    pointer-events: none;
}
.checkbox-label input[type="checkbox"]:disabled ~ *, /* Try to disable label interaction */
.radio-label input[type="radio"]:disabled ~ * {
    pointer-events: none;
}


/* Grouping Styles */
.toggles-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr); /* Two columns */
    gap: var(--spacing-sm) var(--spacing-md); /* Row gap, Column gap */
    border-bottom: 1px solid var(--border-primary);
    padding-bottom: var(--spacing-lg);
    margin-bottom: var(--spacing-lg);
}
.button-group {
    display: flex;
    gap: var(--spacing-sm);
}
.button-group.horizontal {
    flex-wrap: wrap; /* Allow buttons to wrap */
}
.button-group.horizontal > button {
    flex-grow: 1; /* Make buttons share space */
    min-width: 70px; /* Minimum width for buttons */
}
.radio-group {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
}
.radio-group.horizontal {
    flex-direction: row;
    flex-wrap: wrap;
    gap: var(--spacing-md);
}


/* --- Status Message --- */
.status-message {
  font-size: 13px;
  min-height: 1.5em; /* Reserve space */
  margin-top: var(--spacing-md);
  color: var(--text-secondary);
  transition: color 0.2s ease-in-out;
}
.status-message.error {
  color: var(--text-error);
  font-weight: 500;
}
.status-message.success {
  color: var(--text-success);
}

/* --- Search History --- */
#search-history-section {
  margin-top: var(--spacing-lg);
  border-top: 1px solid var(--border-primary);
  padding-top: var(--spacing-md);
  max-height: 160px; /* Limit height */
  overflow-y: auto;
}
.section-title { /* Applied to h3 */
  font-size: 12px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: var(--text-secondary);
  margin-bottom: var(--spacing-sm);
}
#recent-searches-list {
  list-style: none;
  padding: 0;
  margin: 0;
}
#recent-searches-list li {
  cursor: pointer;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius);
  margin-bottom: var(--spacing-xs);
  background-color: var(--bg-primary); /* Use primary for items */
  transition: background-color 0.15s ease-in-out;
  font-size: 14px;
  color: var(--text-primary);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  border: 1px solid var(--border-primary);
}
#recent-searches-list li:hover,
#recent-searches-list li:focus-visible {
  background-color: var(--bg-hover);
  outline: none;
  border-color: var(--accent-secondary);
}
#recent-searches-list li:last-child {
  margin-bottom: 0;
}
#recent-searches-list .no-history {
  color: var(--text-secondary);
  font-style: italic;
  cursor: default;
  background-color: transparent;
  border: none;
  padding-left: 0;
}
#recent-searches-list .no-history.error {
    color: var(--text-error);
    font-style: normal;
    font-weight: 500;
}
#recent-searches-list .no-history:hover {
  background-color: transparent;
}

/* --- Proximity Controls --- */
#proximity-controls {
  margin-top: var(--spacing-md);
  padding: var(--spacing-md);
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius);
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
}
.input-group {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}
.input-group label {
  font-size: 13px;
  font-weight: 500;
  color: var(--text-secondary);
}
.proximity-value-group {
    flex-direction: row;
    align-items: center;
    gap: var(--spacing-sm);
}
.proximity-value-group label {
    flex-shrink: 0; /* Prevent label shrinking */
}
.proximity-value-group input[type="number"] {
    max-width: 80px; /* Limit width of number input */
}


/* --- Regex Mode --- */
#regex-mode .radio-group {
    padding: var(--spacing-md);
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: var(--radius);
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); /* Responsive grid */
    gap: var(--spacing-sm);
}


/* --- Modal Styles (Settings & Help) --- */
.modal {
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%; /* Cover viewport */
  overflow: hidden; /* Prevent body scroll when modal open */
  background-color: var(--bg-modal-backdrop);
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0; /* Start hidden */
  visibility: hidden;
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
}
.modal:not(.hidden) { /* When modal should be visible */
  opacity: 1;
  visibility: visible;
}

.modal-content {
  background-color: var(--bg-primary);
  border-radius: var(--radius);
  padding: var(--spacing-xl);
  width: 90%;
  max-width: 500px; /* Max width for help */
  max-height: 90vh; /* Max height */
  box-shadow: var(--shadow-md);
  position: relative;
  display: flex;
  flex-direction: column;
  overflow: hidden; /* Contain content */
  transform: scale(0.95); /* Initial state for transition */
  transition: transform 0.2s ease-in-out;
}
.modal:not(.hidden) .modal-content {
    transform: scale(1); /* Animate in */
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: var(--spacing-md);
  border-bottom: 1px solid var(--border-primary);
  margin-bottom: var(--spacing-lg);
  flex-shrink: 0; /* Prevent header shrinking */
}
.modal-header h2 {
  font-size: 18px;
  font-weight: 600;
}

.modal-body {
  overflow-y: auto; /* Allow body to scroll if needed */
  flex-grow: 1; /* Take remaining space */
}
.modal-body p {
    margin-bottom: var(--spacing-md);
    color: var(--text-secondary);
}
.modal-body p small {
    font-size: 12px;
    color: var(--text-secondary);
}

.help-section {
    margin-bottom: var(--spacing-lg);
}
.help-section h4 {
    font-size: 14px;
    font-weight: 600;
    margin-bottom: var(--spacing-sm);
    color: var(--text-primary);
}
.help-section ul {
    list-style: none;
    padding-left: 0;
    margin: 0;
}
.help-section li {
    margin-bottom: var(--spacing-xs);
    font-size: 13px;
    color: var(--text-secondary);
}
.help-section code {
    font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
    background-color: var(--bg-hover);
    padding: 2px 4px;
    border-radius: 4px;
    font-size: 13px;
    color: var(--text-primary);
}
.external-link {
    color: var(--accent-primary);
    text-decoration: none;
    font-weight: 500;
}
.external-link:hover {
    text-decoration: underline;
}

/* --- Settings Panel Specifics --- */
.settings-content {
    max-width: 400px; /* Slightly smaller max width */
}
.setting-item {
  margin-bottom: var(--spacing-lg);
}
.setting-item label:not(.checkbox-label):not(.radio-label) { /* Style standalone labels */
  display: block;
  margin-bottom: var(--spacing-sm);
  font-weight: 500;
  font-size: 14px;
}
.setting-item label small {
    font-weight: 400;
    color: var(--text-secondary);
    font-size: 12px;
}
.color-picker-group {
  display: flex;
  gap: var(--spacing-sm);
  align-items: center;
}
.multi-color-group {
    display: flex;
    gap: var(--spacing-sm);
    flex-wrap: wrap;
}
.multi-color-group input[type="color"] {
    width: 36px;
    height: 36px;
}

/* Utility */
.hidden {
  display: none !important;
}

/* Section Box styling (for proximity, regex options) */
.section-box {
    padding: var(--spacing-md);
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: var(--radius);
}